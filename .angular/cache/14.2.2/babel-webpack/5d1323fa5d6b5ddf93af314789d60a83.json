{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/curso.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../curso-details/curso-details.component\";\n\nfunction CursoListComponent_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r3.name, \" \");\n  }\n}\n\nfunction CursoListComponent_li_16_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const curso_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" (\", curso_r4.tema.nombre, \") \");\n  }\n}\n\nfunction CursoListComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 13);\n    i0.ɵɵlistener(\"click\", function CursoListComponent_li_16_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const curso_r4 = restoredCtx.$implicit;\n      const i_r5 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.setActiveElement(curso_r4, i_r5));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, CursoListComponent_li_16_div_2_Template, 2, 1, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const curso_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r5 == ctx_r2.currentIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", curso_r4.nombre, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", curso_r4.tema);\n  }\n}\n\nexport class CursoListComponent {\n  constructor(cursoService) {\n    this.cursoService = cursoService;\n    this.cursos = [];\n    this.currentElement = {};\n    this.currentIndex = -1;\n    this.title = '';\n    this.myControl = new FormControl('');\n    this.options = [{\n      name: 'Curso 1'\n    }, {\n      name: 'Curso 2'\n    }, {\n      name: 'Curso 3'\n    }]; // Ejemplo de opciones para autocompletado\n\n    this.filteredOptions = new Observable(); // Inicializado como un observable vacío\n  }\n\n  ngOnInit() {\n    this.retrieveCursos();\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n\n  retrieveCursos() {\n    this.cursoService.getAll().subscribe({\n      next: data => {\n        this.cursos = data || [];\n        console.log(this.cursos);\n      },\n      error: e => console.error(e)\n    });\n  }\n\n  searchTitle() {\n    this.currentElement = {};\n    this.currentIndex = -1;\n    const filteredCursos = this.cursos.filter(curso => curso.nombre && curso.nombre.toLowerCase().includes(this.title.toLowerCase()));\n    this.cursos = filteredCursos;\n  }\n\n  removeAllElements() {\n    this.cursoService.deleteAll().subscribe({\n      next: res => {\n        console.log(res);\n        this.refreshList();\n      },\n      error: e => console.error(e)\n    });\n  }\n\n  refreshList() {\n    this.retrieveCursos();\n    this.currentElement = {};\n    this.currentIndex = -1;\n  }\n\n  setActiveElement(element, index) {\n    this.currentElement = element;\n    this.currentIndex = index;\n  }\n\n}\n\nCursoListComponent.ɵfac = function CursoListComponent_Factory(t) {\n  return new (t || CursoListComponent)(i0.ɵɵdirectiveInject(i1.CursoService));\n};\n\nCursoListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CursoListComponent,\n  selectors: [[\"app-curso-list\"]],\n  decls: 21,\n  vars: 9,\n  consts: [[1, \"list\", \"row\"], [1, \"col-md-8\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"Buscar por t\\u00EDtulo\", 3, \"ngModel\", \"formControl\", \"matAutocomplete\", \"ngModelChange\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"col-md-6\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"disabled\", \"\", 1, \"m-3\", \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [3, \"viewMode\", \"currentElement\"], [3, \"value\"], [1, \"list-group-item\", 3, \"click\"], [4, \"ngIf\"]],\n  template: function CursoListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Buscar por t\\u00EDtulo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CursoListComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"mat-autocomplete\", null, 4);\n      i0.ɵɵtemplate(8, CursoListComponent_mat_option_8_Template, 2, 2, \"mat-option\", 5);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function CursoListComponent_Template_button_click_10_listener() {\n        return ctx.searchTitle();\n      });\n      i0.ɵɵtext(11, \" Buscar \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"h4\");\n      i0.ɵɵtext(14, \"Listado Cursos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"ul\", 8);\n      i0.ɵɵtemplate(16, CursoListComponent_li_16_Template, 3, 4, \"li\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function CursoListComponent_Template_button_click_17_listener() {\n        return ctx.removeAllElements();\n      });\n      i0.ɵɵtext(18, \" Remove All \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 7);\n      i0.ɵɵelement(20, \"app-curso-details\", 11);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(7);\n\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.title)(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 7, ctx.filteredOptions));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cursos);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"viewMode\", true)(\"currentElement\", ctx.currentElement);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i4.CursoDetailsComponent, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjdXJzby1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Observable","startWith","map","i0","CursoListComponent","constructor","cursoService","name","ngOnInit","retrieveCursos","filteredOptions","myControl","valueChanges","pipe","value","_filter","filterValue","toLowerCase","options","filter","option","includes","getAll","subscribe","next","data","cursos","console","log","error","e","searchTitle","currentElement","currentIndex","filteredCursos","curso","nombre","title","removeAllElements","deleteAll","res","refreshList","setActiveElement","element","index","selectors","decls","vars","consts","template","ctx","_r0"],"sourceRoot":"","sources":["C:\\Users\\tomas\\git\\frontAngularDDS\\src\\app\\components\\curso-list\\curso-list.component.ts","C:\\Users\\tomas\\git\\frontAngularDDS\\src\\app\\components\\curso-list\\curso-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Curso } from 'src/app/models/curso.model';\r\nimport { CursoService } from 'src/app/services/curso.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\ninterface User {\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-curso-list',\r\n  templateUrl: './curso-list.component.html',\r\n  styleUrls: ['./curso-list.component.css']\r\n})\r\nexport class CursoListComponent implements OnInit {\r\n  cursos: Curso[] = [];\r\n  currentElement: Curso = {};\r\n  currentIndex = -1;\r\n  title = '';\r\n\r\n  myControl = new FormControl<string>('');\r\n  options: User[] = [{ name: 'Curso 1' }, { name: 'Curso 2' }, { name: 'Curso 3' }]; // Ejemplo de opciones para autocompletado\r\n  filteredOptions: Observable<User[]> = new Observable<User[]>();  // Inicializado como un observable vacío\r\n\r\n  constructor(private cursoService: CursoService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveCursos();\r\n\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value))\r\n    );\r\n  }\r\n\r\n  private _filter(value: string): User[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.options.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  retrieveCursos(): void {\r\n    this.cursoService.getAll()\r\n      .subscribe({\r\n        next: (data) => {\r\n          this.cursos = data || [];\r\n          console.log(this.cursos);\r\n        },\r\n        error: (e) => console.error(e)\r\n      });\r\n  }\r\n\r\n  searchTitle(): void {\r\n    this.currentElement = {};\r\n    this.currentIndex = -1;\r\n    const filteredCursos = this.cursos.filter(curso => curso.nombre && curso.nombre.toLowerCase().includes(this.title.toLowerCase()));\r\n    this.cursos = filteredCursos;\r\n  }\r\n\r\n  removeAllElements(): void {\r\n    this.cursoService.deleteAll()\r\n      .subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          this.refreshList();\r\n        },\r\n        error: (e) => console.error(e)\r\n      });\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrieveCursos();\r\n    this.currentElement = {};\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  setActiveElement(element: Curso, index: number): void {\r\n    this.currentElement = element;\r\n    this.currentIndex = index;\r\n  }\r\n}\r\n","<div class=\"list row\">\r\n  <div class=\"col-md-8\">\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Buscar por título</mat-label>\r\n      <input\r\n        matInput\r\n        placeholder=\"Buscar por título\"\r\n        [(ngModel)]=\"title\"\r\n        [formControl]=\"myControl\"\r\n        [matAutocomplete]=\"auto\"\r\n      />\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.name\">\r\n          {{ option.name }}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n    <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"searchTitle()\">\r\n      Buscar\r\n    </button>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <h4>Listado Cursos</h4>\r\n    <ul class=\"list-group\">\r\n      <li\r\n        class=\"list-group-item\"\r\n        *ngFor=\"let curso of cursos; let i = index\"\r\n        [class.active]=\"i == currentIndex\"\r\n        (click)=\"setActiveElement(curso, i)\"\r\n      >\r\n        {{ curso.nombre }}\r\n        <div *ngIf=\"curso.tema\">\r\n          ({{ curso.tema.nombre }})\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <button class=\"m-3 btn btn-sm btn-danger\" disabled (click)=\"removeAllElements()\">\r\n      Remove All\r\n    </button>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <app-curso-details [viewMode]=\"true\" [currentElement]=\"currentElement\"></app-curso-details>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}